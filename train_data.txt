[Description] Create a simple Python script that prints 'Hello, World!' with a separate file for the function
[File Structure] {"root": ["main.py", "utils.py"]}
[Code] {"main.py": "from utils import print_hello\n\nprint_hello()", "utils.py": "def print_hello():\n    print('Hello, World!')"}

[Description] Create a portfolio website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "images/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Portfolio</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Welcome to my Portfolio!</h1>\n    <p>Here you will find information about my work and experience.</p>\n  </div>\n  <div class='content'>\n    <h2>Projects</h2>\n    <ul>\n      <li><a href='#'>Project 1</a></li>\n      <li><a href='#'>Project 2</a></li>\n    </ul>\n    <h2>About Me</h2>\n    <p>I am a software engineer with 5 years of experience.</p>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "images/": ""}

[Description] Create an education website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "images/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Education Website</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Welcome to My Education Website!</h1>\n    <p>Here you will find information about various courses and tutorials.</p>\n  </div>\n  <div class='content'>\n    <h2>Courses</h2>\n    <ul>\n      <li><a href='#'>Course 1</a></li>\n      <li><a href='#'>Course 2</a></li>\n    </ul>\n    <h2>Tutorials</h2>\n    <ul>\n      <li><a href='#'>Tutorial 1</a></li>\n      <li><a href='#'>Tutorial 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "images/": ""}

[Description] Create a blog website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "blog/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Blog</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>My Blog</h1>\n    <p>Welcome to my blog where I share my thoughts and experiences.</p>\n  </div>\n  <div class='content'>\n    <h2>Latest Posts</h2>\n    <ul>\n      <li><a href='#'>Post 1</a></li>\n      <li><a href='#'>Post 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "blog/": ""}

[Description] Create a recipe website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "recipes/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Recipes</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>My Recipes</h1>\n    <p>Welcome to my recipe website where I share my favorite dishes.</p>\n  </div>\n  <div class='content'>\n    <h2>Recipes</h2>\n    <ul>\n      <li><a href='#'>Recipe 1</a></li>\n      <li><a href='#'>Recipe 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "recipes/": ""}

[Description] Create a news website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "articles/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My News Website</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>My News Website</h1>\n    <p>Welcome to my news website where I share the latest news and events.</p>\n  </div>\n  <div class='content'>\n    <h2>Latest Articles</h2>\n    <ul>\n      <li><a href='#'>Article 1</a></li>\n      <li><a href='#'>Article 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "articles/": ""}

[Description] Create a forum website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "topics/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Forum</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>My Forum</h1>\n    <p>Welcome to my forum where you can discuss various topics with other users.</p>\n  </div>\n  <div class='content'>\n    <h2>Topics</h2>\n    <ul>\n      <li><a href='#'>Topic 1</a></li>\n      <li><a href='#'>Topic 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "topics/": ""}

[Description] Create a weather app using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "images/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Weather App</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Weather App</h1>\n    <p>Welcome to the weather app where you can check the latest weather information.</p>\n  </div>\n  <div class='content'>\n    <h2>Current Weather</h2>\n    <p>Temperature: 20 C</p>\n    <p>Humidity: 70%</p>\n    <p>Wind Speed: 10 km/h</p>\n    <img src='images/weather.png' alt='Weather Icon'>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "images/": {"weather.png": ""}}

[Description] Create a music player using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "songs/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Music Player</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Music Player</h1>\n    <p>Welcome to the music player where you can listen to your favorite songs.</p>\n  </div>\n  <div class='content'>\n    <h2>Playlist</h2>\n    <ul>\n      <li><a href='#'>Song 1</a></li>\n      <li><a href='#'>Song 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "songs/": ""}

[Description] Create a chat application using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Chat Application</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Chat Application</h1>\n    <p>Welcome to the chat application where you can chat with other users.</p>\n  </div>\n  <div class='content'>\n    <h2>Chat Room</h2>\n    <ul>\n      <li>User 1: Hello!</li>\n      <li>User 2: Hi!</li>\n    </ul>\n  </div>\n  <div class='footer'>\n    <input type='text' placeholder='Type your message'>\n    <button>Send</button>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}\n.footer {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #f2f2f2;\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')"}

[Description] Create a task manager using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Task Manager</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Task Manager</h1>\n    <p>Welcome to the task manager where you can keep track of your tasks and projects.</p>\n  </div>\n  <div class='content'>\n    <h2>Tasks</h2>\n    <ul>\n      <li><input type='checkbox'> Task 1</li>\n      <li><input type='checkbox'> Task 2</li>\n    </ul>\n    <h2>Projects</h2>\n    <ul>\n      <li><a href='#'>Project 1</a></li>\n      <li><a href='#'>Project 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')"}

[Description] Create a recipe website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "recipes/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Recipes</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>My Recipes</h1>\n    <p>Welcome to my recipe website where I share my favorite recipes.</p>\n  </div>\n  <div class='content'>\n    <h2>Recipes</h2>\n    <ul>\n      <li><a href='#'>Recipe 1</a></li>\n      <li><a href='#'>Recipe 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "recipes/": ""}

[Description] Create a social media website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Social Media</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>My Social Media</h1>\n    <p>Welcome to my social media website where you can connect with your friends and family.</p>\n  </div>\n  <div class='content'>\n    <h2>Posts</h2>\n    <ul>\n      <li><a href='#'>Post 1</a></li>\n      <li><a href='#'>Post 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')"}

[Description] Create a movie database using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "movies/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Movie Database</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Movie Database</h1>\n    <p>Welcome to the movie database where you can search for your favorite movies.</p>\n  </div>\n  <div class='content'>\n    <h2>Movies</h2>\n    <ul>\n      <li><a href='#'>Movie 1</a></li>\n      <li><a href='#'>Movie 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "movies/": ""}

[Description] Create a job board using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Job Board</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Job Board</h1>\n    <p>Welcome to the job board where you can search for job openings.</p>\n  </div>\n  <div class='content'>\n    <h2>Jobs</h2>\n    <ul>\n      <li><a href='#'>Job 1</a></li>\n      <li><a href='#'>Job 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')"}

[Description] Create a blog website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "blog/"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Blog</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>My Blog</h1>\n    <p>Welcome to my blog where I share my thoughts and ideas.</p>\n  </div>\n  <div class='content'>\n    <h2>Posts</h2>\n    <ul>\n      <li><a href='#'>Post 1</a></li>\n      <li><a href='#'>Post 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "blog/": ""}

[Description] Create a to-do list using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>To-Do List</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>To-Do List</h1>\n    <p>Welcome to the to-do list where you can keep track of your tasks.</p>\n  </div>\n  <div class='content'>\n    <h2>Tasks</h2>\n    <ul>\n      <li><input type='checkbox'> Task 1</li>\n      <li><input type='checkbox'> Task 2</li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')"}

[Description] Create a portfolio website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "projects/project1.html", "projects/project2.html"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Portfolio</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>My Portfolio</h1>\n    <p>Welcome to my portfolio website where you can see my latest projects.</p>\n  </div>\n  <div class='content'>\n    <h2>Projects</h2>\n    <ul>\n      <li><a href='projects/project1.html'>Project 1</a></li>\n      <li><a href='projects/project2.html'>Project 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "projects/project1.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Project 1</title>\n  <link rel='stylesheet' href='../style.css'>\n  <script src='../script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Project 1</h1>\n    <p>This is my latest project.</p>\n  </div>\n  <div class='content'>\n    <h2>Details</h2>\n    <ul>\n      <li>Language: Python</li>\n      <li>Framework: Flask</li>\n    </ul>\n  </div>\n</body>\n</html>", "projects/project2.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Project 2</title>\n  <link rel='stylesheet' href='../style.css'>\n  <script src='../script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Project 2</h1>\n    <p>This is another project.</p>\n  </div>\n  <div class='content'>\n    <h2>Details</h2>\n    <ul>\n      <li>Language: JavaScript</li>\n      <li>Framework: React</li>\n    </ul>\n  </div>\n</body>\n</html>"}

[Description] Create a blog website using HTML, CSS, and JavaScript
[File Structure] {"root": ["index.html", "style.css", "script.js", "posts/post1.html", "posts/post2.html"]}
[Code] {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Blog</title>\n  <link rel='stylesheet' href='style.css'>\n  <script src='script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>My Blog</h1>\n    <p>Welcome to my blog where I share my thoughts and experiences.</p>\n  </div>\n  <div class='content'>\n    <h2>Latest Posts</h2>\n    <ul>\n      <li><a href='posts/post1.html'>Post 1</a></li>\n      <li><a href='posts/post2.html'>Post 2</a></li>\n    </ul>\n  </div>\n</body>\n</html>", "style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "script.js": "console.log('Hello, World!')", "posts/post1.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Post 1</title>\n  <link rel='stylesheet' href='../style.css'>\n  <script src='../script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Post 1</h1>\n    <p>This is my first post.</p>\n  </div>\n  <div class='content'>\n    <h2>Content</h2>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi.</p>\n  </div>\n</body>\n</html>", "posts/post2.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Post 2</title>\n  <link rel='stylesheet' href='../style.css'>\n  <script src='../script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Post 2</h1>\n    <p>This is another post.</p>\n  </div>\n  <div class='content'>\n    <h2>Content</h2>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi.</p>\n  </div>\n</body>\n</html>"}

[Description] Create a todo list application using Flask
[File Structure] {"root": ["app.py", "templates/index.html", "static/css/style.css", "static/js/script.js"]}
[Code] {"app.py": "from flask import Flask, render_template, request, redirect, url_for\n\napp = Flask(__name__)\n\nitems = []\n\n@app.route('/')\ndef index():\n    return render_template('index.html', items=items)\n\n@app.route('/add_item', methods=['POST'])\ndef add_item():\n    item = request.form['item']\n    items.append(item)\n    return redirect(url_for('index'))\n\nif __name__ == '__main__':\n    app.run(debug=True)", "templates/index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Todo List</title>\n  <link rel='stylesheet' href='../static/css/style.css'>\n  <script src='../static/js/script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Todo List</h1>\n    <p>Welcome to my todo list application.</p>\n  </div>\n  <div class='content'>\n    <h2>Tasks</h2>\n    <ul>\n      {% for item in items %}\n      <li>{{ item }}</li>\n      {% endfor %}\n    </ul>\n    <form action='/add_item' method='POST'>\n      <input type='text' name='item' placeholder='Add a new task' required>\n      <button type='submit'>Add</button>\n    </form>\n  </div>\n</body>\n</html>", "static/css/style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}", "static/js/script.js": "console.log('Hello, World!')"}

[Description] Create an image gallery application using Flask
[File Structure] {"root": ["app.py", "templates/index.html", "templates/gallery.html", "static/css/style.css", "static/images/image1.jpg", "static/images/image2.jpg", "static/images/image3.jpg"]}
[Code] {"app.py": "from flask import Flask, render_template\n\napp = Flask(__name__)\n\nimages = [\n    {'name': 'Image 1', 'url': 'static/images/image1.jpg'},\n    {'name': 'Image 2', 'url': 'static/images/image2.jpg'},\n    {'name': 'Image 3', 'url': 'static/images/image3.jpg'},\n]\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n@app.route('/gallery')\ndef gallery():\n    return render_template('gallery.html', images=images)\n\nif __name__ == '__main__':\n    app.run(debug=True)", "templates/index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Image Gallery</title>\n  <link rel='stylesheet' href='../static/css/style.css'>\n</head>\n<body>\n  <div class='header'>\n    <h1>Image Gallery</h1>\n    <p>Welcome to my image gallery application.</p>\n  </div>\n  <div class='content'>\n    <a href='/gallery'>View Gallery</a>\n  </div>\n</body>\n</html>", "templates/gallery.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Gallery</title>\n  <link rel='stylesheet' href='../static/css/style.css'>\n</head>\n<body>\n  <div class='header'>\n    <h1>Gallery</h1>\n    <p>Check out these beautiful images.</p>\n  </div>\n  <div class='content'>\n    {% for image in images %}\n    <div class='image'>\n      <img src='{{ image.url }}' alt='{{ image.name }}'>\n      <p>{{ image.name }}</p>\n    </div>\n    {% endfor %}\n  </div>\n</body>\n</html>", "static/css/style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}\n.image {\n  display: inline-block;\n  margin: 10px;\n  text-align: center;\n}\n.image img {\n  width: 200px;\n  height: 200px;\n  object-fit: cover;\n}\n.image p {\n  margin-top: 10px;\n}", "static/images/image1.jpg": "<image data>", "static/images/image2.jpg": "<image data>", "static/images/image3.jpg": "<image data>"}

[Description] Create a chat application using Flask and SocketIO
[File Structure] {"root": ["app.py", "templates/index.html", "static/css/style.css", "static/js/script.js"]}
[Code] {"app.py": "from flask import Flask, render_template\nfrom flask_socketio import SocketIO, emit\n\napp = Flask(__name__)\napp.config['SECRET_KEY'] = 'mysecretkey'\nsocketio = SocketIO(app)\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n@socketio.on('message')\ndef handle_message(message):\n    emit('message', message, broadcast=True)\n\nif __name__ == '__main__':\n    socketio.run(app)", "templates/index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Chat Application</title>\n  <link rel='stylesheet' href='../static/css/style.css'>\n  <script src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.2/socket.io.js'></script>\n  <script src='../static/js/script.js'></script>\n</head>\n<body>\n  <div class='header'>\n    <h1>Chat Application</h1>\n    <p>Welcome to my chat application.</p>\n  </div>\n  <div class='content'>\n    <div class='messages' id='messages'></div>\n    <form action='' method='POST' id='form'>\n      <input type='text' name='message' id='message' placeholder='Type your message' required>\n      <button type='submit'>Send</button>\n    </form>\n  </div>\n  <script>\n    var socket = io.connect('http://' + document.domain + ':' + location.port);\n    socket.on('message', function(data) {\n      var message = '<p><strong>' + data.username + ':</strong> ' + data.message + '</p>';\n      document.querySelector('#messages').innerHTML += message;\n    });\n    document.querySelector('#form').addEventListener('submit', function(event) {\n      event.preventDefault();\n      var message = document.querySelector('#message').value;\n      socket.emit('message', {'username': 'Me', 'message': message});\n      document.querySelector('#message').value = '';\n    });\n  </script>\n</body>\n</html>", "static/css/style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}\n.messages {\n  height: 300px;\n  overflow-y: scroll;\n}\nform {\n  margin-top: 20px;\n}", "static/js/script.js": ""}

[Description] Create a weather application using Flask and OpenWeatherMap API
[File Structure] {"root": ["app.py", "templates/index.html", "static/css/style.css"]}
[Code] {"app.py": "import requests\nfrom flask import Flask, render_template, request\n\napp = Flask(__name__)\n\n@app.route('/', methods=['GET', 'POST'])\ndef index():\n    if request.method == 'POST':\n        city = request.form['city']\n        api_key = '<your_api_key>'\n        url = f'http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric'\n        response = requests.get(url)\n        data = response.json()\n        if data['cod'] == 200:\n            temperature = data['main']['temp']\n            description = data['weather'][0]['description']\n            return render_template('index.html', temperature=temperature, description=description)\n        else:\n            error = 'City not found'\n            return render_template('index.html', error=error)\n    else:\n        return render_template('index.html')\n\nif __name__ == '__main__':\n    app.run(debug=True)", "templates/index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Weather Application</title>\n  <link rel='stylesheet' href='../static/css/style.css'>\n</head>\n<body>\n  <div class='header'>\n    <h1>Weather Application</h1>\n    <p>Welcome to my weather application.</p>\n  </div>\n  <div class='content'>\n    <form action='' method='POST'>\n      <input type='text' name='city' placeholder='Enter city name' required>\n      <button type='submit'>Get Weather</button>\n    </form>\n    {% if error %}\n    <div class='error'>{{ error }}</div>\n    {% endif %}\n    {% if temperature and description %}\n    <div class='weather'>\n      <p><strong>Temperature:</strong> {{ temperature }}&deg;C</p>\n      <p><strong>Description:</strong> {{ description }}</p>\n    </div>\n    {% endif %}\n  </div>\n</body>\n</html>", "static/css/style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}\nform {\n  margin-top: 20px;\n}\n.error {\n  color: red;\n  margin-top: 10px;\n}\n.weather {\n  margin-top: 10px;\n}"}

[Description] Create a URL shortener application using Flask and Redis
[File Structure] {"root": ["app.py", "templates/index.html", "static/css/style.css"]}
[Code] {"app.py": "from flask import Flask, render_template, request, redirect\nimport redis\n\napp = Flask(__name__)\nr = redis.Redis(host='localhost', port=6379, db=0)\n\n@app.route('/', methods=['GET', 'POST'])\ndef index():\n    if request.method == 'POST':\n        url = request.form['url']\n        short_url = r.get(url)\n        if not short_url:\n            count = r.incr('url_count')\n            short_url = f'http://localhost:5000/{count}'\n            r.set(url, short_url)\n            r.set(short_url, url)\n        else:\n            short_url = short_url.decode('utf-8')\n        return render_template('index.html', short_url=short_url)\n    else:\n        return render_template('index.html')\n\n@app.route('/<int:id>')\ndef redirect_url(id):\n    url = r.get(f'http://localhost:5000/{id}')\n    if url:\n        return redirect(url.decode('utf-8'))\n    else:\n        return 'URL not found'\n\nif __name__ == '__main__':\n    app.run(debug=True)", "templates/index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>URL Shortener Application</title>\n  <link rel='stylesheet' href='../static/css/style.css'>\n</head>\n<body>\n  <div class='header'>\n    <h1>URL Shortener Application</h1>\n    <p>Welcome to my URL shortener application.</p>\n  </div>\n  <div class='content'>\n    <form action='' method='POST'>\n      <input type='text' name='url' placeholder='Enter URL to shorten' required>\n      <button type='submit'>Shorten</button>\n    </form>\n    {% if short_url %}\n    <div class='short-url'>\n      <p><strong>Short URL:</strong> <a href='{{ short_url }}' target='_blank'>{{ short_url }}</a></p>\n    </div>\n    {% endif %}\n  </div>\n</body>\n</html>", "static/css/style.css": "body {\n  font-family: Arial, sans-serif;\n}\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n.content {\n  padding: 20px;\n}\nform {\n  margin-top: 20px;\n}\n.short-url {\n  margin-top: 10px;\n}"}

[Description] Create a to-do list application using Flask and MongoDB
[File Structure] {"root": ["app.py", "templates/index.html", "templates/edit.html", "templates/new.html"]}
[Code] {"app.py": "from flask import Flask, render_template, request, redirect, url_for\nfrom pymongo import MongoClient\nfrom bson.objectid import ObjectId\n\napp = Flask(__name__)\nclient = MongoClient()\ndb = client['todo_list']\ntodos = db['todos']\n\n@app.route('/')\ndef index():\n    todo_list = todos.find()\n    return render_template('index.html', todo_list=todo_list)\n\n@app.route('/new', methods=['GET', 'POST'])\ndef new():\n    if request.method == 'POST':\n        todo = {\n            'title': request.form['title'],\n            'description': request.form['description'],\n            'status': 'Incomplete'\n        }\n        todos.insert_one(todo)\n        return redirect(url_for('index'))\n    else:\n        return render_template('new.html')\n\n@app.route('/edit/<string:id>', methods=['GET', 'POST'])\ndef edit(id):\n    todo = todos.find_one({'_id': ObjectId(id)})\n    if request.method == 'POST':\n        title = request.form['title']\n        description = request.form['description']\n        status = request.form['status']\n        todos.update_one({'_id': ObjectId(id)}, {'$set': {'title': title, 'description': description, 'status': status}})\n        return redirect(url_for('index'))\n    else:\n        return render_template('edit.html', todo=todo)\n\nif __name__ == '__main__':\n    app.run(debug=True)", "templates/index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>To-do List Application</title>\n</head>\n<body>\n  <h1>To-do List Application</h1>\n  <table>\n    <tr>\n      <th>Title</th>\n      <th>Description</th>\n      <th>Status</th>\n      <th>Edit</th>\n    </tr>\n    {% for todo in todo_list %}\n    <tr>\n      <td>{{ todo['title'] }}</td>\n      <td>{{ todo['description'] }}</td>\n      <td>{{ todo['status'] }}</td>\n      <td><a href='/edit/{{ todo['_id'] }}'>Edit</a></td>\n    </tr>\n    {% endfor %}\n  </table>\n  <a href='/new'>Add new to-do item</a>\n</body>\n</html>", "templates/edit.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Edit To-do Item</title>\n</head>\n<body>\n  <h1>Edit To-do Item</h1>\n  <form method='POST'>\n    <label>Title:</label>\n    <input type='text' name='title' value='{{ todo['title'] }}'>\n    <br>\n    <label>Description:</label>\n    <textarea name='description'>{{ todo['description'] }}</textarea>\n    <br>\n    <label>Status:</label>\n    <select name='status'>\n      <option value='Incomplete' {% if todo['status'] == 'Incomplete' %}selected{% endif %}>Incomplete</option>\n      <option value='Complete' {% if todo['status'] == 'Complete' %}selected{% endif %}>Complete</option>\n    </select>\n    <br>\n    <input type='submit' value='Save'>\n  </form>\n  <a href='/'>Back to list</a>\n</body>\n</html>", "templates/new.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>New To-do Item</title>\n</head>\n<body>\n  <h1>New To-do Item</h1>\n  <form method='POST'>\n    <label>Title:</label>\n    <input type='text' name='title'>\n    <br>\n    <label>Description:</label>\n    <textarea name='description'></textarea>\n    <br>\n    <input type='submit' value='Add'>\n  </form>\n  <a href='/'>Back to list</a>\n</body>\n</html>"}

[Description] Create a blog application using Flask and SQLite
[File Structure] {"root": ["app.py", "models.py", "templates/index.html", "templates/new_post.html", "templates/post.html", "templates/edit_post.html", "static/css/style.css"]}
[Code] {"app.py": "from flask import Flask, render_template, request, redirect, url_for\nfrom models import Post, db\n\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///blog.db'\ndb.init_app(app)\n\n@app.route('/')\ndef index():\n    posts = Post.query.all()\n    return render_template('index.html', posts=posts)\n\n@app.route('/new', methods=['GET', 'POST'])\ndef new_post():\n    if request.method == 'POST':\n        title = request.form['title']\n        body = request.form['body']\n        post = Post(title=title, body=body)\n        db.session.add(post)\n        db.session.commit()\n        return redirect(url_for('index'))\n    else:\n        return render_template('new_post.html')\n\n@app.route('/post/<int:id>')\ndef view_post(id):\n    post = Post.query.get(id)\n    return render_template('post.html', post=post)\n\n@app.route('/post/<int:id>/edit', methods=['GET', 'POST'])\ndef edit_post(id):\n    post = Post.query.get(id)\n    if request.method == 'POST':\n        post.title = request.form['title']\n        post.body = request.form['body']\n        db.session.commit()\n        return redirect(url_for('view_post', id=id))\n    else:\n        return render_template('edit_post.html', post=post)\n\nif __name__ == '__main__':\n    app.run(debug=True)", "models.py": "from flask_sqlalchemy import SQLAlchemy\n\ndb = SQLAlchemy()\n\nclass Post(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    title = db.Column(db.String(100))\n    body = db.Column(db.Text)\n\n    def __repr__(self):\n        return f'Post(id={self.id}, title={self.title}, body={self.body[:20]}...)'", "templates/index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Blog Application</title>\n  <link rel='stylesheet' href='../static/css/style.css'>\n</head>\n<body>\n  <h1>Blog Application</h1>\n  {% for post in posts %}\n    <div class='post'>\n      <h2><a href='/post/{{ post.id }}'>{{ post.title }}</a></h2>\n      <p>{{ post.body }}</p>\n    </div>\n  {% endfor %}\n  <a href='/new'>New post</a>\n</body>\n</html>", "templates/new_post.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>New Post</title>\n  <link rel='stylesheet' href='../static/css/style.css'>\n</head>\n<body>\n  <h1>New Post</h1>\n  <form method='POST'>\n    <label>Title:</label>\n    <input type='text' name='title'>\n    <br>\n    <label>Body:</label>\n    <textarea name='body'></textarea>\n    <br>\n    <input type='submit' value='Create Post'>\n  </form>\n  <a href='/'>Back to posts</a>\n</body>\n</html>", "templates/post.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>{{ post.title }}</title>\n  <link rel='stylesheet' href='../static/css/style.css'>\n</head>\n<body>\n  <h1>{{ post.title }}</h1>\n  <p>{{ post.body }}</p>\n  <a href='/post/{{ post.id }}/edit'>Edit post</a>\n  <a href='/'>Back to posts</a>\n</body>\n</html>", "templates/edit_post.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Edit Post</title>\n  <link rel='stylesheet' href='../static/css/style.css'>\n</head>\n<body>\n  <h1>Edit Post</h1>\n  <form method='POST'>\n    <label>Title:</label>\n    <input type='text' name='title' value='{{ post.title }}'>\n    <br>\n    <label>Body:</label>\n    <textarea name='body'>{{ post.body }}</textarea>\n    <br>\n    <input type='submit' value='Save'>\n  </form>\n  <a href='/post/{{ post.id }}'>Back to post</a>\n  <a href='/'>Back to posts</a>\n</body>\n</html>", "static/css/style.css": "body {\n    font-family: Arial, sans-serif;\n}\n\nh1 {\n    font-size: 2em;\n    margin-bottom: 0;\n}\n\n.post {\n    margin-bottom: 20px;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 5px;\n}\n\ninput[type='text'], textarea {\n    width: 100%;\n    padding: 5px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n    border: 1px solid #ccc;\n}\n\ninput[type='submit'] {\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    padding: 10px 20px;\n    cursor: pointer;\n    margin-bottom: 10px;\n}\n\na {\n    color: #4CAF50;\n    text-decoration: none;\n    margin-right: 10px;\n}\n\na:hover {\n    text-decoration: underline;\n}"}

[Description] Create a URL shortener application using Flask and Redis
[File Structure] {"root": ["app.py", "templates/index.html"]}
[Code] {"app.py": "import string\nimport random\nfrom flask import Flask, render_template, request, redirect, url_for\nimport redis\n\napp = Flask(__name__)\n\nr = redis.Redis(host='localhost', port=6379, db=0)\n\ndef generate_short_url():\n    while True:\n        short_url = ''.join(random.choices(string.ascii_lowercase + string.digits, k=6))\n        if not r.get(short_url):\n            return short_url\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n@app.route('/shorten', methods=['POST'])\ndef shorten_url():\n    long_url = request.form['long_url']\n    short_url = generate_short_url()\n    r.set(short_url, long_url)\n    return render_template('index.html', short_url=short_url)\n\n@app.route('/<short_url>')\ndef redirect_to_long_url(short_url):\n    long_url = r.get(short_url)\n    if long_url:\n        return redirect(long_url.decode())\n    else:\n        return 'Invalid URL'\n\nif __name__ == '__main__':\n    app.run(debug=True)", "templates/index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>URL Shortener</title>\n</head>\n<body>\n  {% if short_url %}\n    <p>Short URL: <a href='/{{ short_url }}'>{{ request.host }}/{{ short_url }}</a></p>\n  {% endif %}\n  <form method='POST' action='/shorten'>\n    <label>Long URL:</label>\n    <input type='text' name='long_url'>\n    <br>\n    <input type='submit' value='Shorten'>\n  </form>\n</body>\n</html>"}

[Description] Create a real-time chat application using Flask and SocketIO
[File Structure] {"root": ["app.py", "templates/index.html"]}
[Code] {"app.py": "from flask import Flask, render_template\nfrom flask_socketio import SocketIO, emit\n\napp = Flask(__name__)\napp.config['SECRET_KEY'] = 'secret!'\nsocketio = SocketIO(app)\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n@socketio.on('message')\ndef handle_message(message):\n    print(f'Received message: {message}')\n    emit('message', message, broadcast=True)\n\nif __name__ == '__main__':\n    socketio.run(app, debug=True)", "templates/index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Chat Application</title>\n  <script src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.4.1/socket.io.js'></script>\n  <script>\n    var socket = io.connect('http://' + document.domain + ':' + location.port);\n    socket.on('message', function(data) {\n      var p = document.createElement('p');\n      p.innerHTML = data;\n      document.getElementById('messages').appendChild(p);\n    });\n    function sendMessage() {\n      var message = document.getElementById('message').value;\n      socket.emit('message', message);\n      document.getElementById('message').value = '';\n    }\n  </script>\n</head>\n<body>\n  <h1>Chat Application</h1>\n  <div id='messages'></div>\n  <br>\n  <input type='text' id='message'>\n  <button onclick='sendMessage()'>Send</button>\n</body>\n</html>"}
